{"version":3,"file":"chartist-plugin-tooltip.min.js","sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","defaultOptions","currency","undefined","plugins","tooltip","options","extend","chart","tooltipSelector","Bar","Pie","$chart","$","container","$toolTip","append","find","hide","on","$point","tooltipText","attr","label","next","length","text","value","replace","html","show","event","css","left","offsetX","originalEvent","layerX","width","top","offsetY","layerY","height","tooltips"],"mappings":";;;;;;CAAC,SAAUA,EAAMC,GACO,kBAAXC,SAAyBA,OAAOC,IAEzCD,UAAW,WACT,MAAQF,GAAKI,oBAAsBH,MAET,gBAAZI,SAIhBC,OAAOD,QAAUJ,IAEjBD,EAAK,6BAA+BC,KAEtCM,KAAM,WAkFN,MA3EC,UAASC,EAAQC,EAAUC,GAC1B,YAEA,IAAIC,IACFC,SAAUC,OAWZH,GAASI,QAAUJ,EAASI,YAC5BJ,EAASI,QAAQC,QAAU,SAASC,GAIlC,MAFAA,GAAUN,EAASO,UAAWN,EAAgBK,GAEvC,SAAiBE,GACtB,GAAIC,GAAkB,WAClBD,aAAiBR,GAASU,IAC5BD,EAAkB,UACTD,YAAiBR,GAASW,MACnCF,EAAkB,YAGpB,IAAIG,GAASC,EAAEL,EAAMM,WACjBC,EAAWH,EACdI,OAAO,wCACPC,KAAK,qBACLC,MAEDN,GAAOO,GAAG,aAAcV,EAAiB,WACvC,GAAIW,GAASP,EAAEhB,MACXwB,EAAc,EAElB,IAAID,EAAOE,KAAK,WACdD,GAAeD,EAAOE,KAAK,WAAa,WAIxC,IAAId,YAAiBR,GAASW,IAAK,CACjC,GAAIY,GAAQH,EAAOI,KAAK,YACpBD,GAAME,OAAS,IACjBJ,GAAeE,EAAMG,OAAS,QAKpC,GAAIC,GAAQP,EAAOE,KAAK,WACCnB,UAArBG,EAAQJ,UAA0BI,EAAQJ,WAC5CyB,EAAQrB,EAAQJ,SAAWyB,EAAMC,QAAQ,+BAAgC,QAE3EP,GAAeM,EAEfZ,EAASc,KAAKR,GAAaS,SAG7BlB,EAAOO,GAAG,aAAcV,EAAiB,WACvCM,EAASG,SAGXN,EAAOO,GAAG,YAAa,SAASY,GAC9BhB,EAASiB,KACPC,MAAOF,EAAMG,SAAWH,EAAMI,cAAcC,QAAUrB,EAASsB,QAAU,EAAI,GAC7EC,KAAMP,EAAMQ,SAAWR,EAAMI,cAAcK,QAAUzB,EAAS0B,SAAW,UAMjF3C,OAAQC,SAAUC,UAEbA,SAASI,QAAQsC","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.tooltips'] = factory();\n  }\n}(this, function () {\n\n  /**\r\n   * Chartist.js plugin to display a data label on top of the points in a line chart.\r\n   *\r\n   */\r\n  /* global Chartist */\r\n  (function(window, document, Chartist) {\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n      currency: undefined\r\n      // showTooltips: true,\r\n      // tooltipEvents: ['mousemove', 'touchstart', 'touchmove'],\r\n      // labelClass: 'ct-label',\r\n      // labelOffset: {\r\n      //   x: 0,\r\n      //   y: -10\r\n      // },\r\n      // textAnchor: 'middle'\r\n    };\r\n\r\n    Chartist.plugins = Chartist.plugins || {};\r\n    Chartist.plugins.tooltip = function(options) {\r\n\r\n      options = Chartist.extend({}, defaultOptions, options);\r\n\r\n      return function tooltip(chart) {\r\n        var tooltipSelector = '.ct-point';\r\n        if (chart instanceof Chartist.Bar) {\r\n          tooltipSelector = '.ct-bar';\r\n        } else if (chart instanceof Chartist.Pie) {\r\n          tooltipSelector = '.ct-slice';\r\n        }\r\n\r\n        var $chart = $(chart.container);\r\n        var $toolTip = $chart\r\n        .append('<div class=\"chartist-tooltip\"></div>')\r\n        .find('.chartist-tooltip')\r\n        .hide();\r\n\r\n        $chart.on('mouseenter', tooltipSelector, function() {\r\n          var $point = $(this);\r\n          var tooltipText = '';\r\n\r\n          if ($point.attr('ct:meta')) {\r\n            tooltipText += $point.attr('ct:meta') + '<br>';\r\n          } else {\r\n            // For Pie Charts also take the labels into account\r\n            // Could add support for more charts here as well!\r\n            if (chart instanceof Chartist.Pie) {\r\n              var label = $point.next('.ct-label');\r\n              if (label.length > 0) {\r\n                tooltipText += label.text() + '<br>';\r\n              }\r\n            }\r\n          }\r\n\r\n          var value = $point.attr('ct:value');\r\n          if (options.currency !== undefined && options.currency) {\r\n            value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, \"$1,\");\r\n          }\r\n          tooltipText += value;\r\n\r\n          $toolTip.html(tooltipText).show();\r\n        });\r\n\r\n        $chart.on('mouseleave', tooltipSelector, function() {\r\n          $toolTip.hide();\r\n        });\r\n\r\n        $chart.on('mousemove', function(event) {\r\n          $toolTip.css({\r\n            left: (event.offsetX || event.originalEvent.layerX) - $toolTip.width() / 2 - 10,\r\n            top: (event.offsetY || event.originalEvent.layerY) - $toolTip.height() - 40\r\n          });\r\n        });\r\n      }\r\n    };\r\n\r\n  }(window, document, Chartist));\r\n\n  return Chartist.plugins.tooltips;\n\n}));\n"]}